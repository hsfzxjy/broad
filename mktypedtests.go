//go:build ignore

package main

import (
	"bytes"
	"fmt"
	"go/format"
	"os"
)

func main() {
	var b bytes.Buffer
	writeln := func(s string, args ...any) {
		fmt.Fprintf(&b, s+"\n", args...)
	}
	writeln("// Code generated by mktypedtests.go. DO NOT EDIT.")
	writeln("//go:generate go run mktypedtests.go")
	writeln("package broad_test")
	writeln("import (")
	writeln("\"testing\"")
	writeln("\"math/rand/v2\"")
	writeln(")")

	for i := 0; i <= 128; i++ {
		writeln("func TestByte%d(t *testing.T) {", i)
		writeln("data := make([][%d]byte, 100)", i)
		writeln("rng := rand.NewChaCha8([32]byte{})")
		writeln("for j := 0; j < len(data); j++ {")
		writeln("rng.Read((&data[j])[:])")
		writeln("}")
		writeln("testTyped(t, data)")
		writeln("}")
	}

	out, err := format.Source(b.Bytes())
	if err != nil {
		panic(err)
	}
	err = os.WriteFile("typed_test.go", out, 0644)
	if err != nil {
		panic(err)
	}
}
